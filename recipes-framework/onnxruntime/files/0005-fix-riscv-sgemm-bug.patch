From 0941cf3f179f272d73b2b8e508b8dd7748c0fcdc Mon Sep 17 00:00:00 2001
From: NaOHCC <NaOH@live.cn>
Date: Wed, 25 Dec 2024 10:58:16 +0800
Subject: [PATCH 2/2] fix riscv sgemm bug

---
 cmake/CMakeLists.txt                   | 4 ++++
 onnxruntime/core/mlas/inc/mlas.h       | 7 +++++--
 onnxruntime/core/mlas/lib/convolve.cpp | 8 ++++----
 onnxruntime/core/mlas/lib/mlasi.h      | 2 +-
 onnxruntime/core/mlas/lib/sgemm.cpp    | 4 ++--
 5 files changed, 16 insertions(+), 9 deletions(-)

diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index d90a2a3550..2d635ad2c9 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -549,6 +549,10 @@ if (NOT MSVC AND NOT (CMAKE_SYSTEM_NAME STREQUAL "iOS"))
   endif()
   set(CMAKE_REQUIRED_FLAGS ${OLD_CMAKE_REQUIRED_FLAGS})
 endif()
+# Some stable cross toolchains of RISC-V still need this
+if(CMAKE_SYSTEM_PROCESSOR MATCHES "^(riscv.*|RISCV.*)")
+  set(onnxruntime_LINK_LIBATOMIC true)
+endif()
 
 set(REPO_ROOT ${PROJECT_SOURCE_DIR}/..)
 set(ONNXRUNTIME_ROOT ${PROJECT_SOURCE_DIR}/../onnxruntime)
diff --git a/onnxruntime/core/mlas/inc/mlas.h b/onnxruntime/core/mlas/inc/mlas.h
index 28ae64c4d5..f231fc238a 100644
--- a/onnxruntime/core/mlas/inc/mlas.h
+++ b/onnxruntime/core/mlas/inc/mlas.h
@@ -57,6 +57,9 @@ Abstract:
 #if defined(MLAS_TARGET_ARM64) || defined(MLAS_TARGET_ARM64EC) || defined(MLAS_TARGET_ARM)
 #define MLAS_TARGET_ARM_ANY
 #endif
+#if defined(__riscv)
+#define MLAS_TARGET_SCALAR
+#endif
 
 #if defined(__VSX__)
 #define MLAS_TARGET_POWER
@@ -66,7 +69,7 @@ Abstract:
 #if defined(__wasm_simd128__)
 #define MLAS_TARGET_WASM_SIMD
 #else
-#define MLAS_TARGET_WASM_SCALAR
+#define MLAS_TARGET_SCALAR
 #endif
 #endif
 
@@ -755,7 +758,7 @@ enum MLAS_CONV_ALGORITHM {
     MlasConvAlgorithmGemmDirect,
     MlasConvAlgorithmExpandThenGemm,
     MlasConvAlgorithmExpandThenGemmSegmented,
-#if defined(MLAS_TARGET_WASM_SCALAR)
+#if defined(MLAS_TARGET_SCALAR)
     MlasConvAlgorithmDepthwise,
 #endif
 };
diff --git a/onnxruntime/core/mlas/lib/convolve.cpp b/onnxruntime/core/mlas/lib/convolve.cpp
index ec79641559..8a3c76d3b6 100644
--- a/onnxruntime/core/mlas/lib/convolve.cpp
+++ b/onnxruntime/core/mlas/lib/convolve.cpp
@@ -903,7 +903,7 @@ Return Value:
         return;
     }
 
-#if defined(MLAS_TARGET_WASM_SCALAR)
+#if defined(MLAS_TARGET_SCALAR)
 
     if (Algorithm == MlasConvAlgorithmDepthwise) {
         // Fill the Working Buffer with Zero for use by the depthwise kernel.
@@ -976,7 +976,7 @@ Return Value:
                     break;
                 }
 
-#if defined(MLAS_TARGET_WASM_SCALAR)
+#if defined(MLAS_TARGET_SCALAR)
 
                 case MlasConvAlgorithmDepthwise:
                 {
@@ -1224,7 +1224,7 @@ Return Value:
 
     } else {
 
-#if defined(MLAS_TARGET_WASM_SCALAR)
+#if defined(MLAS_TARGET_SCALAR)
 
         // Scalar direct conv for depthwise convolution.
         // Currently only support 3x3 kernel with padding <=1 and dilations = 1.
@@ -1299,4 +1299,4 @@ Return Value:
 }
 #if defined(_MSC_VER) && !defined(__clang__)
 #pragma warning(pop)
-#endif
\ No newline at end of file
+#endif
diff --git a/onnxruntime/core/mlas/lib/mlasi.h b/onnxruntime/core/mlas/lib/mlasi.h
index 13ea8d96c2..07ec078452 100644
--- a/onnxruntime/core/mlas/lib/mlasi.h
+++ b/onnxruntime/core/mlas/lib/mlasi.h
@@ -1338,7 +1338,7 @@ MlasFp32FromBits(
 #pragma warning(pop)
 #endif
 
-#if defined(MLAS_TARGET_WASM_SCALAR)
+#if defined(MLAS_TARGET_SCALAR)
 
 void
 MLASCALL
diff --git a/onnxruntime/core/mlas/lib/sgemm.cpp b/onnxruntime/core/mlas/lib/sgemm.cpp
index 4d7a1ceb4e..88e366b62e 100644
--- a/onnxruntime/core/mlas/lib/sgemm.cpp
+++ b/onnxruntime/core/mlas/lib/sgemm.cpp
@@ -208,7 +208,7 @@ Return Value:
     }
 }
 
-#if !defined(MLAS_TARGET_WASM_SCALAR)
+#if !defined(MLAS_TARGET_SCALAR)
 
 void
 MlasSgemmCopyPackB(
@@ -734,7 +734,7 @@ Return Value:
     }
 }
 
-#else //defined(MLAS_TARGET_WASM_SCALAR)
+#else //defined(MLAS_TARGET_SCALAR)
 
 void
 MlasSgemmCopyPackB(
-- 
2.34.1

